{"ast":null,"code":"import _defineProperty from \"/Users/aayushsinha/Desktop/FinalProject/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/aayushsinha/Desktop/FinalProject/src/PathfindingVisualizer/Todo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Node from './Node/Node';\nimport './Todo.css';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nimport { dijkstra, getNodesInShortestPathOrder } from '../algorithms/dijkstra';\nimport './PathfindingVisualizer.css';\nlibrary.add(faLocationArrow);\nvar START_NODE_ROW = 2;\nvar START_NODE_COL = 4;\nvar FINISH_NODE_ROW = 11;\nvar FINISH_NODE_COL = 4;\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      mouseIsPressed: false,\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    };\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    const grid = getInitialGrid();\n    this.setState({\n      grid\n    });\n  }\n\n  animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n      if (i === visitedNodesInOrder.length) {\n        setTimeout(() => {\n          this.animateShortestPath(nodesInShortestPathOrder);\n        }, 10 * i);\n        return;\n      }\n\n      setTimeout(() => {\n        const node = visitedNodesInOrder[i];\n        document.getElementById(\"node-\".concat(node.row, \"-\").concat(node.col)).className = 'node node-visited';\n      }, 10 * i);\n    }\n  }\n\n  clear() {\n    for (let i = 0; i < 20; i++) {\n      for (let j = 0; j < 50; j++) if (document.getElementById(\"node-\".concat(i, \"-\").concat(j)).className === 'node node-visited' || document.getElementById(\"node-\".concat(i, \"-\").concat(j)).className === 'node node-shortest-path') {\n        document.getElementById(\"node-\".concat(i, \"-\").concat(j)).className = 'node';\n      }\n    }\n  }\n\n  animateShortestPath(nodesInShortestPathOrder) {\n    for (let i = 0; i < nodesInShortestPathOrder.length - 1; i++) {\n      setTimeout(() => {\n        const node = nodesInShortestPathOrder[i];\n        document.getElementById(\"node-\".concat(node.row, \"-\").concat(node.col)).className = 'node node-shortest-path';\n      }, 50 * i);\n    }\n  }\n\n  visualizeDijkstra(sr, sc, er, ec) {\n    const grid = this.state.grid;\n    const startNode = grid[sr][sc];\n    const finishNode = grid[er][ec];\n    const visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n    this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder); // document.querySelector(\".node-start\").classList.remove('node-start');\n    // document.querySelector(`#node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`).classList.add('node-start');\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    this.clear();\n    const newItem = this.state.currentItem;\n\n    if (newItem.text !== \"\") {\n      const items = [...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      });\n    }\n\n    this.componentDidMount();\n    this.clear();\n  }\n\n  handleInput(e) {\n    e.preventDefault();\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    }); // var products = {\n    //   'sugar': [35, 4],\n    //   'milk': [45, 4],\n    //   'banana': [42, 13],\n    //   'soap': [18, 3],\n    //   'phone': [16, 13],\n    //   'laptop': [23, 16],\n    //   'socks': [32, 15],\n    //   'pen': [12, 9]\n    // };\n    // if (products.hasOwnProperty(e.target.value)) {\n    //   var targetCell = products[e.target.value];\n    //   var targetRow = targetCell[1];\n    //   var targetCol = targetCell[0];\n    //   console.log(targetRow);\n    //   console.log(targetCol);\n    //   console.log(targetCell);\n    // }\n  }\n\n  deleteItem(text) {\n    this.clear();\n    console.log(text);\n    var products = {\n      'sugar': [35, 4],\n      'milk': [45, 4],\n      'banana': [42, 13],\n      'soap': [18, 3],\n      'phone': [16, 13],\n      'laptop': [23, 16],\n      'socks': [32, 15],\n      'pen': [12, 9]\n    };\n\n    if (products.hasOwnProperty(text)) {\n      var targetCell = products[text];\n      var targetRow = targetCell[1];\n      var targetCol = targetCell[0];\n      console.log(\"delete\");\n      console.log(targetRow);\n      console.log(targetCol);\n      console.log(targetCell);\n      var FINISH_NODE_ROW = targetRow;\n      var FINISH_NODE_COL = targetCol;\n      this.visualizeDijkstra(START_NODE_ROW, START_NODE_COL, FINISH_NODE_ROW, FINISH_NODE_COL);\n    }\n  }\n\n  setUpdate(text, key) {\n    console.log(\"items:\" + this.state.items);\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        console.log(item.key + \"    \" + key);\n        item.text = text;\n      }\n    });\n    this.setState({\n      items: items\n    });\n  }\n\n  render() {\n    const grid = this.state.grid;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"outer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"top-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Shopping List\"), React.createElement(\"form\", {\n      id: \"to-do-form\",\n      onSubmit: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Item\",\n      value: this.state.currentItem.text,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"add\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Add\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.state.items.text), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(ListItems, {\n      items: this.state.items,\n      deleteItem: this.deleteItem,\n      setUpdate: this.setUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"instruction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Searchable Items: sugar, milk, banana, soap, phone, laptop, socks, pen\"))), React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, grid.map((row, rowIdx) => {\n      return React.createElement(\"div\", {\n        key: rowIdx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, row.map((node, nodeIdx) => {\n        const row = node.row,\n              col = node.col,\n              isFinish = node.isFinish,\n              isStart = node.isStart,\n              isWall = node.isWall;\n        return React.createElement(Node, {\n          key: nodeIdx,\n          col: col,\n          isFinish: isFinish,\n          isStart: isStart,\n          isWall: isWall,\n          row: row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        });\n      }));\n    }))));\n  }\n\n}\n\nconst getInitialGrid = () => {\n  const grid = [];\n\n  for (let row = 0; row < 20; row++) {\n    const currentRow = [];\n\n    for (let col = 0; col < 50; col++) {\n      currentRow.push(createNode(col, row));\n    }\n\n    grid.push(currentRow);\n  }\n\n  return grid;\n};\n\nvar obj = {\n  4: [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18],\n  5: [1, 14, 18],\n  6: [1, 14, 15, 16, 18],\n  7: [1, 16, 18],\n  8: [1, 16, 18],\n  9: [1, 16, 18],\n  10: [1, 3, 4, 5, 6, 7, 10, 12, 16, 18],\n  11: [1, 10, 12, 16, 18],\n  12: [1, 10, 12, 16, 18],\n  13: [1, 3, 4, 5, 6, 7, 10, 12, 16, 17, 18],\n  14: [1, 18],\n  15: [1, 18],\n  16: [1, 3, 4, 5, 6, 7, 10, 12, 18],\n  17: [1, 10, 12, 18],\n  18: [1, 10, 12, 18],\n  19: [1, 3, 4, 5, 6, 7, 10, 12, 18],\n  20: [1, 18],\n  21: [1, 18],\n  22: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  23: [1, 10, 12, 18],\n  24: [1, 10, 12, 18],\n  25: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  26: [1, 18],\n  27: [1, 18],\n  28: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  29: [1, 10, 12, 18],\n  30: [1, 10, 12, 18],\n  31: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  32: [1, 18],\n  33: [1, 18],\n  34: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  35: [1, 10, 12, 18],\n  36: [1, 10, 12, 18],\n  37: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  38: [1, 18],\n  39: [1, 18],\n  40: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  41: [1, 10, 12, 18],\n  42: [1, 10, 12, 18],\n  43: [1, 10, 12, 18],\n  44: [1, 18],\n  45: [1, 18],\n  46: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18],\n  47: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]\n};\n\nfunction createWall(obj, key, value) {\n  return obj.hasOwnProperty(key) && obj[key].includes(value);\n}\n\nconst createNode = (col, row) => {\n  return {\n    col,\n    row,\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n    distance: Infinity,\n    isVisited: false,\n    isWall: createWall(obj, col, row) ? true : false,\n    previousNode: null\n  };\n};\n\nconst getNewGridWithWallToggled = (grid, row, col) => {\n  const newGrid = grid.slice();\n  const node = newGrid[row][col];\n\n  const newNode = _objectSpread({}, node, {\n    isWall: !node.isWall\n  });\n\n  newGrid[row][col] = newNode;\n  return newGrid;\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/aayushsinha/Desktop/FinalProject/src/PathfindingVisualizer/Todo.js"],"names":["React","Node","ListItems","library","faLocationArrow","dijkstra","getNodesInShortestPathOrder","add","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","Todo","Component","constructor","props","state","grid","mouseIsPressed","items","currentItem","text","key","addItem","bind","handleInput","deleteItem","setUpdate","componentDidMount","getInitialGrid","setState","animateDijkstra","visitedNodesInOrder","nodesInShortestPathOrder","i","length","setTimeout","animateShortestPath","node","document","getElementById","row","col","className","clear","j","visualizeDijkstra","sr","sc","er","ec","startNode","finishNode","e","preventDefault","newItem","target","value","Date","now","console","log","products","hasOwnProperty","targetCell","targetRow","targetCol","map","item","render","rowIdx","nodeIdx","isFinish","isStart","isWall","currentRow","push","createNode","obj","createWall","includes","distance","Infinity","isVisited","previousNode","getNewGridWithWallToggled","newGrid","slice","newNode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Node from './Node/Node';\nimport './Todo.css';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons'\nimport { dijkstra, getNodesInShortestPathOrder } from '../algorithms/dijkstra';\n\nimport './PathfindingVisualizer.css';\n\n\n\nlibrary.add(faLocationArrow)\n\nvar START_NODE_ROW = 2;\nvar START_NODE_COL = 4;\nvar FINISH_NODE_ROW = 11;\nvar FINISH_NODE_COL = 4;\n\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      mouseIsPressed: false,\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n\n      }\n    }\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    const grid = getInitialGrid();\n\n    this.setState({ grid });\n  }\n\n  animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n      if (i === visitedNodesInOrder.length) {\n        setTimeout(() => {\n          this.animateShortestPath(nodesInShortestPathOrder);\n        }, 10 * i);\n        return;\n      }\n      setTimeout(() => {\n        const node = visitedNodesInOrder[i];\n        document.getElementById(`node-${node.row}-${node.col}`).className =\n          'node node-visited';\n      }, 10 * i);\n    }\n  }\n  clear() {\n    for (let i = 0; i < 20; i++) {\n      for (let j = 0; j < 50; j++)\n        if (document.getElementById(`node-${i}-${j}`).className === 'node node-visited' || document.getElementById(`node-${i}-${j}`).className === 'node node-shortest-path') {\n\n          document.getElementById(`node-${i}-${j}`).className = 'node';\n\n        }\n    }\n  }\n\n\n\n  animateShortestPath(nodesInShortestPathOrder) {\n    for (let i = 0; i < nodesInShortestPathOrder.length - 1; i++) {\n      setTimeout(() => {\n        const node = nodesInShortestPathOrder[i];\n        document.getElementById(`node-${node.row}-${node.col}`).className =\n          'node node-shortest-path';\n      }, 50 * i);\n    }\n\n  }\n\n  visualizeDijkstra(sr, sc, er, ec) {\n    const { grid } = this.state;\n    const startNode = grid[sr][sc];\n    const finishNode = grid[er][ec];\n    const visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n    this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\n    // document.querySelector(\".node-start\").classList.remove('node-start');\n    // document.querySelector(`#node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`).classList.add('node-start');\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    this.clear();\n    const newItem = this.state.currentItem;\n    if (newItem.text !== \"\") {\n      const items = [...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      })\n    }\n    this.componentDidMount();\n    this.clear();\n\n  }\n  handleInput(e) {\n    e.preventDefault();\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n\n      }\n    })\n\n    // var products = {\n    //   'sugar': [35, 4],\n    //   'milk': [45, 4],\n    //   'banana': [42, 13],\n    //   'soap': [18, 3],\n    //   'phone': [16, 13],\n    //   'laptop': [23, 16],\n    //   'socks': [32, 15],\n    //   'pen': [12, 9]\n    // };\n\n    // if (products.hasOwnProperty(e.target.value)) {\n\n    //   var targetCell = products[e.target.value];\n    //   var targetRow = targetCell[1];\n    //   var targetCol = targetCell[0];\n    //   console.log(targetRow);\n    //   console.log(targetCol);\n    //   console.log(targetCell);\n\n\n    // }\n\n  }\n  deleteItem(text) {\n    this.clear();\n    console.log(text);\n    var products = {\n      'sugar': [35, 4],\n      'milk': [45, 4],\n      'banana': [42, 13],\n      'soap': [18, 3],\n      'phone': [16, 13],\n      'laptop': [23, 16],\n      'socks': [32, 15],\n      'pen': [12, 9]\n    };\n    if (products.hasOwnProperty(text)) {\n\n      var targetCell = products[text];\n      var targetRow = targetCell[1];\n      var targetCol = targetCell[0];\n      console.log(\"delete\");\n      console.log(targetRow);\n      console.log(targetCol);\n      console.log(targetCell);\n      var FINISH_NODE_ROW = targetRow;\n      var FINISH_NODE_COL = targetCol;\n      this.visualizeDijkstra(START_NODE_ROW, START_NODE_COL, FINISH_NODE_ROW, FINISH_NODE_COL);\n\n    }\n\n\n  }\n\n  setUpdate(text, key) {\n    console.log(\"items:\" + this.state.items);\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        console.log(item.key + \"    \" + key)\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n\n\n\n  }\n\n\n\n  render() {\n    const { grid } = this.state;\n    return (\n      <>\n        <div className=\"outer\">\n          <div className=\"Todo\">\n            <header>\n              <h1 className=\"top-head\">Shopping List</h1>\n              <form id=\"to-do-form\" onSubmit={this.addItem}>\n                <input type=\"text\" placeholder=\"Enter Item\" value={this.state.currentItem.text} onChange={this.handleInput}></input>\n                <button className=\"add\" type=\"submit\">Add</button>\n              </form>\n              <p>{this.state.items.text}</p>\n              <div className=\"container\">\n                <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate} />\n              </div>\n              <span className=\"instruction\" >Searchable Items: sugar, milk, banana, soap, phone, laptop, socks, pen</span>\n\n            </header>\n\n          </div>\n          {/* <button onClick={() => this.visualizeDijkstra(START_NODE_ROW, START_NODE_COL, FINISH_NODE_ROW, FINISH_NODE_COL)}>\n          Visualize Dijkstra's Algorithm\n        </button> */}\n          <div className=\"grid\">\n            {grid.map((row, rowIdx) => {\n              return (\n                <div key={rowIdx}>\n                  {row.map((node, nodeIdx) => {\n                    const { row, col, isFinish, isStart, isWall } = node;\n                    return (\n                      <Node\n                        key={nodeIdx}\n                        col={col}\n                        isFinish={isFinish}\n                        isStart={isStart}\n                        isWall={isWall}\n                        row={row}></Node>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst getInitialGrid = () => {\n  const grid = [];\n  for (let row = 0; row < 20; row++) {\n    const currentRow = [];\n    for (let col = 0; col < 50; col++) {\n      currentRow.push(createNode(col, row));\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n};\nvar obj = {\n  4: [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18],\n  5: [1, 14, 18],\n  6: [1, 14, 15, 16, 18],\n  7: [1, 16, 18],\n  8: [1, 16, 18],\n  9: [1, 16, 18],\n  10: [1, 3, 4, 5, 6, 7, 10, 12, 16, 18],\n  11: [1, 10, 12, 16, 18],\n  12: [1, 10, 12, 16, 18],\n  13: [1, 3, 4, 5, 6, 7, 10, 12, 16, 17, 18],\n  14: [1, 18],\n  15: [1, 18],\n  16: [1, 3, 4, 5, 6, 7, 10, 12, 18],\n  17: [1, 10, 12, 18],\n  18: [1, 10, 12, 18],\n  19: [1, 3, 4, 5, 6, 7, 10, 12, 18],\n  20: [1, 18],\n  21: [1, 18],\n  22: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  23: [1, 10, 12, 18],\n  24: [1, 10, 12, 18],\n  25: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  26: [1, 18],\n  27: [1, 18],\n  28: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  29: [1, 10, 12, 18],\n  30: [1, 10, 12, 18],\n  31: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  32: [1, 18],\n  33: [1, 18],\n  34: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  35: [1, 10, 12, 18],\n  36: [1, 10, 12, 18],\n  37: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  38: [1, 18],\n  39: [1, 18],\n  40: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  41: [1, 10, 12, 18],\n  42: [1, 10, 12, 18],\n  43: [1, 10, 12, 18],\n  44: [1, 18],\n  45: [1, 18],\n  46: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18],\n  47: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],\n}\nfunction createWall(obj, key, value) {\n  return obj.hasOwnProperty(key) && obj[key].includes(value);\n}\n\nconst createNode = (col, row) => {\n  return {\n    col,\n    row,\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n    distance: Infinity,\n    isVisited: false,\n    isWall: (createWall(obj, col, row)) ? true : false,\n    previousNode: null,\n  };\n};\n\n\n\n\nconst getNewGridWithWallToggled = (grid, row, col) => {\n  const newGrid = grid.slice();\n  const node = newGrid[row][col];\n  const newNode = {\n    ...node,\n    isWall: !node.isWall,\n  };\n  newGrid[row][col] = newNode;\n  return newGrid;\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}